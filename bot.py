import os.path

import sqlFunc, defs
import telebot, time, logging, datetime, json, funcs
token = ''

bot = telebot.TeleBot(token)
list = []
helpers = []
admins = []
spam_text = '–≤ —ç—Ç–æ–º —á–∞—Ç–µ –Ω–µ –∫—É–ø–∏–ª–∏ –¥–æ–Ω–∞—Ç, —Å—Ç—Ä–∞–¥–∞–π—Ç–µ'

@bot.message_handler(commands=['hi', 'start'])
def sendRaspisan(message):
    time.sleep(1)
    bot.reply_to(message, text='–ø—Ä–∏–≤–µ—Ç')
    bot.send_message(admins[0], text=f'{message}')

    time.sleep(1)

@bot.message_handler(commands=['date'])
def sendDate(message):
    date = datetime
    print('datetime', date.datetime.now())
    print('tome', date.time)
    print('date', date.date.today())
    print('date', date.timedelta)
    bot.reply_to(message, text='{}'.format(date.date.today()))
    if not os.path.isdir('test'):
        os.mkdir('test')
        bot.reply_to(message, text='direction created')

@bot.message_handler(commands=['bestSchool'])
def sendRaspisan(message):
    bot.reply_to(message, text='–ù–æ–º–µ—Ä –ª—É—á—à–µ–π —à–∫–æ–ª—ã –≤ –º–∏—Ä–µ - 188')
    print(message.chat.id)


@bot.message_handler(content_types=['photo'])
def sendRaspisan(photo_message):
    id = photo_message.chat.id

    if id in admins:

        #—Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ –∏ –≥–æ–≤–æ—Ä–∏–º —ç—Ç–æ
        os.chdir('photos')
        photo = photo_message.photo[-1]
        file_info = bot.get_file(photo.file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        save_path = '{}.jpg'.format(datetime.date.today())
        with open(save_path, 'wb') as new_file:
            new_file.write(downloaded_file)
        time.sleep(1)
        bot.reply_to(photo_message, text='–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.')
        os.chdir('..')

        if '–¥–∞' in photo_message.caption or '–î–∞' in photo_message.caption:
            for i in list:
                photo_id = photo_message.photo[-1].file_id

                bot.send_photo(i, photo_id)
        bot.send_message(chat_id=admins[0], text='‚úÖ–í—Å—ë —Ä–∞–∑–æ—Å–ª–∞–Ω–æ ‚úÖ')





@bot.message_handler(commands=['schedule'])
def send_schedule(message):
    date = defs.needingDate()
    if sqlFunc.isNewUser(message):
        sqlFunc.addUser(message)
    os.chdir('photos')


    with open('{}.jpg'.format(date), 'rb') as file:
        bot.send_photo(message.chat.id, photo=file, caption='||_–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å –ª—é–±–æ–≤—å—é ‚ù§Ô∏è_||', parse_mode="MarkdownV2")
        bot.send_message(chat_id=admins[0], text='@{} –ø—Ä–æ—Å–∏–ª —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'.format(message.from_user.username))
        os.chdir('..')
        print(message.from_user)
        print(sqlFunc.setGettedPhoto(message.from_user), '--')

@bot.message_handler(commands=['delete'])
def delete_message(message):

    print(message.from_user.id)
    if message.from_user.id in admins:
        id_of_message = message.reply_to_message.id
        bot.delete_message(chat_id=message.chat.id, message_id=id_of_message)



@bot.message_handler(commands=['teqst'])
def test(message):
    for i in list:
        bot.send_message(i, 'test')
        time.sleep(1)

@bot.message_handler(commands=['essay'])
def send_essay(message):
    if sqlFunc.isNewUser(message.from_user):
        sqlFunc.addUser(message.from_user)
    print(message.from_user)
    user = message.from_user
    d = int(datetime.datetime.timestamp(datetime.datetime.now()))
    print("-------", d)
    info = '''–û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:
Id - {0}
userName - @{3}
–ò–º—è - {1} {2}
–ü—Ä–µ–º–∏–µ–º - {4},
–í—Ä–µ–º—è - {5}
    '''.format(str(user.id), user.first_name, user.last_name, user.username, user.is_premium, d)

    bot.forward_message(from_chat_id=message.chat.id, message_id=message.message_id, chat_id=admins[0])
    bot.send_message(chat_id=admins[0], text=info)

@bot.message_handler(commands=['subscribe'])
def subscribe_for_spending_photos():
    pass

#admin_–ø–∞–Ω–µ–ª—å
@bot.message_handler(commands=['admin'])
def admin_commands(message):
    if message.from_user.id in admins:
        bot.send_message(message.chat.id, reply_markup=funcs.markup_admin, text='–ö–æ–º–∞–Ω–¥—ã:')
        print(message.document)
        pass
    else:
        bot.reply_to(message, '–í—ã –Ω–µ –∞–¥–º–∏–Ω, –Ω–µ –≤—ã–∑—ã–≤–∞–π—Ç–µ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –ø–æ–∂–∞–ª—É–π—Å—Ç–∞')

@bot.message_handler(commands=['menu'])
def admin_commands(message):
    bot.send_message(message.chat.id, reply_markup=funcs.markup_user, text='–ö–æ–º–∞–Ω–¥—ã:')



#–æ—Ç–≤–µ—Ç—á–∏–∫
@bot.callback_query_handler(func= lambda call: True)
def calls_answear(call):

    if call.data == 'scbLS' and sqlFunc.subscribeToMailing(call.from_user):
        bot.answer_callback_query(call.id, text='–í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã!!!', show_alert=True)
    elif call.data == 'scbLS':
        bot.answer_callback_query(call.id, text='–ù–µ –Ω–∞–¥–æ —Å–ø–∞–º–∏—Ç—å, –≤—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã!', show_alert=True)


    if call.data == 'thks':
        bot.answer_callback_query(call.id, text='–∑–∞–∫–∏–Ω—É–ª')
        for i in list:
            bot.send_message(i, '–°–ø–∞—Å–∏–±–æ —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ! ü•∞üòçüòò')
    elif call.data == 'sorry':
        bot.answer_callback_query(call.id, text='–ü–æ–ø—Ä–æ—Å–∏–ª –ø—Ä–æ—â–µ–Ω–∏—è')
        for i in list:
            bot.send_message(i,
'–ò–∑–≤–∏–Ω—è–µ–º—Å—è —á—Ç–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–æ–≥–ª–æ –∫–æ–º—É-—Ç–æ –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏—Ç—å—Å—è üò≠\
–ü—Ä–æ—Å—Ç–∏—Ç–µ –Ω–∞—Å, –º—ã –Ω–µ —É–≤–∏–¥–µ–ª–∏ —á—Ç–æ –±—ã–ª–æ —Ç–∞–º')
    elif call.data == 'users':
        users = sqlFunc.getAllUsers()
        textd = ''
        for user in users:
             textd += (f'Username: @{user[0]}, id: {user[1]},\n   –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É: {user[2] == 1}, –ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ {user[3]} \n\n')
        textd = textd[:-2]
        bot.send_message(call.from_user.id, text=textd)
        bot.answer_callback_query(call.id, text="–°–∫–∏–Ω—É–ª —Å–ø–∏—Å–∫–æ–º –Ω–∏–∂–µ")


@bot.message_handler(commands=['about'])
def send_about_bot(message):
    chat = message.chat
    text = '–≠—Ç–æ –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ—Ç –≤–∞–º —Å–∫–∏–Ω—É—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–µ —Å–ø–∞–º—å—Ç–µ. –°–Ω–∏–∑—É –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏'
    bot.send_message(chat_id=chat.id)

@bot.message_handler(commands=['get_users'])
def get_users(message):
    chat_id = message.chat.id
    members = bot.get_chat_administrators(chat_id)  # –ü–æ–ª—É—á–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤

    users = []
    for member in members:
        users.append(member.user.username or member.user.first_name)

    # –û—Ç–ø—Ä–∞–≤–∏–º —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —á–∞—Ç
    bot.send_message(chat_id, "–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:\n" + "\n".join(users))


@bot.message_handler(content_types=['text'])
def free_commands_func(message):
    print("text")
    if message.from_user.id in admins :
        if message.text == '–±–æ—Ç–∏–∫ —Å–∫–∏–Ω—å –≤—Å–µ–º':
            for i in list:
                today = datetime.date.today()
                os.chdir('photos')
                file = open('{}.jpg'.format(today), 'rb')

                bot.send_photo(i, photo=file, caption='||_–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å –ª—é–±–æ–≤—å—é ‚ù§Ô∏è_||',
                               parse_mode="MarkdownV2")
                os.chdir('..')
            bot.reply_to(message, text='–ù—É, —Å–∫–∏–Ω—É–ª, –≥–¥–µ –º–æ—è –æ—Ü–µ–Ω–∫–∞ 5? ü§ì')
    if message.text == '–∑–∞—Å–ø–∞–º—å':
        i = 1
        while i!=11:
            txt = spam_text+' '+str(i)
            bot.send_message(chat_id=message.chat.id, text=txt)
            i+=1
    elif message.text == '–º–æ–ª–æ–¥–µ—Ü':
        bot.reply_to(message, text='—Ç—ã —Ç–æ–∂–µ üíñ')
    elif message.text == '–ø–∞—Å—Ö–∞–ª–∫–æ':
        bot.reply_to(message, text='1488?')
    time.sleep(1)
    bot.forward_message(chat_id=admins[0], message_id=message.message_id, from_chat_id=message.chat.id)


bot.infinity_polling()
